[{"C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\index.js":"1","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\App.js":"2","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BobuxBuy.js":"3","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BobuxVisuals.js":"4","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\Buyables.js":"5","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BobuxClicker.js":"6","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BuyRow.js":"7","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\VisualRow.js":"8"},{"size":510,"mtime":1655422866266,"results":"9","hashOfConfig":"10"},{"size":2485,"mtime":1655422492146,"results":"11","hashOfConfig":"10"},{"size":1540,"mtime":1655295160783,"results":"12","hashOfConfig":"10"},{"size":621,"mtime":1655295009443,"results":"13","hashOfConfig":"10"},{"size":3791,"mtime":1655425448726,"results":"14","hashOfConfig":"10"},{"size":1512,"mtime":1655422600358,"results":"15","hashOfConfig":"10"},{"size":2110,"mtime":1655224031480,"results":"16","hashOfConfig":"10"},{"size":388,"mtime":1655171300214,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"5xlztm",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\index.js",["48"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nlet saveData = document.cookie\ndocument.title = \"Bobux Generator\"\n\nconst setSaveData = (data) => {\n \n  document.cookie = JSON.stringify(data)\n  \n}\n\nif (saveData == \"\") {\n  setSaveData({buyables:{}, bobux:0})\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App saveData={saveData} setSaveData={setSaveData}/>\n  </React.StrictMode>\n);\n\n","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\App.js",["49","50","51","52","53"],[],"\nimport './App.css';\nimport BobuxClicker from './BobuxClicker';\nimport BobuxVisuals from './BobuxVisuals';\nimport BobuxBuy from './BobuxBuy';\nimport {useEffect, useState} from 'react';\nimport Buyables from './Buyables';\nimport React from 'react'\n\nlet time = 10\nconst alertt = (msg) => {\n  // alert(msg)\n  \n  return\n\n}\nconst useUnload = (fn, depen) => {\n  const cb = React.useRef(fn);\n  \n  const unloadParams = () => {\n      cb.current(depen[0], depen[1]);\n  }\n  React.useEffect(() => {\n    \n    window.addEventListener('beforeunload', unloadParams);\n    return () => {\n      window.removeEventListener('beforeunload', unloadParams);\n    };\n  }, [cb].concat(depen));\n};\n\nlet stepMoney = () => {\n  return\n}\n\n\n\nfunction App(props) {\n  let saveData = JSON.parse(props.saveData)\n  let [bobux, setBobux] = useState(saveData.bobux)\n  let [bps, setBPS] = useState(0)\n  let [game, setGame]  = useState({buyables:saveData.buyables});\n  let [deletePrompt, setDeletePrompt] = useState(false)\n  \n \n  let unload = (bobux, game) => {\n    props.setSaveData({bobux:bobux, buyables:game.buyables})\n  }\n\n  useUnload(unload, [bobux, game]) \n  let deleteData = () => {\n    \n    if (deletePrompt == false) {\n      setDeletePrompt(true)\n      alert(\"Are you sure you want to do this? Click Delete Data again if you are certain.\")\n      setTimeout(() => {\n        setDeletePrompt(false)\n      }, 10000)\n      return\n      \n    }\n    if (deletePrompt) {\n     \n        setGame({bobux:0, buyables:{}})\n        setBobux(0)\n        setBPS(0)\n        \n        \n        \n        return\n    }\n\n    \n    \n  }\n  stepMoney = () => {\n   \n    let buyables = game.buyables\n    let newBobux = 0\n    Object.values(buyables).forEach(buyable => {\n      newBobux += buyable.bobuxPerSec * buyable.amount * (time / 1000)\n    })\n    \n    setBPS(newBobux * (1000 / time))\n    setBobux(bobux + newBobux)\n  }\n  \n\n  return (\n    <div className=\"App\"> \n      <div className=\"App-header\">\n        <h2>bobux generator :D</h2>\n        <p className='bestperson'>by Iron#3098</p>\n        <button onClick={deleteData} id=\"delete-data\">Delete Data</button>\n      </div>\n      <div className=\"App-body\">\n        <BobuxClicker bobux={{bobux, setBobux}} game={[game, setGame]} bps={bps}/>\n        <BobuxVisuals bobux={{bobux, setBobux}} game={[game, setGame]} />\n        <BobuxBuy bobux={{bobux, setBobux}} game={[game, setGame]} alert={alertt}  />\n      </div>\n    </div>\n  )\n}\n\nsetInterval(() => {\n  stepMoney()\n}, time)\n\n\n\nexport default App;\n","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BobuxBuy.js",["54","55","56"],[],"//import Buyables\r\nimport Buyables from './Buyables.js';\r\nimport BuyRow from './BuyRow.js';\r\nimport {nanoid} from 'nanoid';\r\nfunction ScaledPrice(price, amount) {\r\n    return Math.round(price * Math.pow(1.15, amount))\r\n}\r\n\r\n\r\n\r\nfunction BobuxBuy(props) {\r\n    let game = props.game[0]\r\n    let bobux = props.bobux.bobux\r\n    let setBobux = props.bobux.setBobux\r\n    let setGame = props.game[1]\r\n   \r\n    const buyItem = (key) => {\r\n            \r\n        let price = 0\r\n        let item = game.buyables[key]\r\n        if (item == undefined) {\r\n            price = Buyables[key].price\r\n        } else {\r\n            price = ScaledPrice(Buyables[key].price, game.buyables[key].amount)\r\n        }\r\n        if (price > bobux) {\r\n            props.alert(\"You don't have enough bobux LOL. get richer!!!\")\r\n            return\r\n        }\r\n        setBobux(bobux - price)\r\n        if (game.buyables[key] == undefined) { game.buyables[key] = {amount:0} }\r\n        let templateItem = Buyables[key]\r\n        game.buyables = {...game.buyables, [key]:{...game.buyables[key], bobuxPerSec:templateItem.bobuxPerSec, amount:game.buyables[key].amount + 1}}\r\n\r\n        \r\n\r\n    }\r\n    let rows = Object.keys(Buyables).map(key => {\r\n        return (\r\n            <BuyRow key={\"buyrow-\" + nanoid()} kkey={key} buyable={Buyables[key]} ScaledPrice={ScaledPrice} buyItem={buyItem} playerInfo={game.buyables}/>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"BobuxBuy\">\r\n            \r\n            {rows}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BobuxBuy;","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BobuxVisuals.js",["57"],[],"import { useState } from \"react\";\r\nimport VisualRow from \"./VisualRow\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Buyables from \"./Buyables\";\r\n\r\nfunction BobuxVisuals(props) {\r\n    let playerInfo = props.game[0].buyables\r\n   \r\n    let rows = Object.keys(playerInfo).map(key => {\r\n        let buyable = Buyables[key]\r\n        return (\r\n            <VisualRow name={buyable.name} key={\"row-\" + nanoid()} icon={buyable.icon} amount={playerInfo[key].amount}/>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <div className=\"BobuxVisuals\">\r\n            {rows}\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BobuxVisuals;","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\Buyables.js",[],[],"C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BobuxClicker.js",[],[],"C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\BuyRow.js",["58","59","60","61","62","63","64"],[],"import { useState } from \"react\";\r\nimport Buyables from \"./Buyables\";\r\n\r\n//A function that takes an int as an input and returns a string which is the int but with commas every 3 characters\r\nfunction addCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); //no clue what just happened here but github copiolet big brain\r\n}\r\n\r\nfunction BuyRow(props) {\r\n    let buyable = props.buyable\r\n    let key = props.kkey\r\n    let playerInfo = props.playerInfo\r\n    let info = playerInfo[key]\r\n    let price\r\n    if (info != undefined) {\r\n        price = props.ScaledPrice(buyable.price, playerInfo[key].amount)\r\n    } else {\r\n        price = buyable.price\r\n    }\r\n    \r\n   \r\n    const playerbuyable = playerInfo[key] || {}\r\n    const amount = playerbuyable.amount == undefined ? 0 : playerbuyable.amount\r\n    \r\n    let onClick = () => {\r\n        \r\n        console.log(\"clicked\")\r\n        props.buyItem(key)\r\n    }\r\n    \r\n    let keys = Object.keys(Buyables)\r\n    let index = keys.indexOf(key)\r\n    let prevKey = keys[index - 1]\r\n    let prevBuyable = playerInfo[prevKey]\r\n    \r\n    let logic = false\r\n\r\n    try {\r\n       \r\n        if (Object.keys(Buyables)[0] == key) {\r\n            logic = true\r\n        }\r\n\r\n        if (prevBuyable != undefined) {\r\n            logic = true\r\n        }\r\n        \r\n    } catch (e) {\r\n     //pass   \r\n    }\r\n    \r\n    \r\n    if (logic == false) {\r\n        return null\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <div id=\"BuyRow\" onPointerDown={onClick} onTouchStart={onClick} onClickCapture={onClick} >\r\n            <div id=\"BuyRowMain\">\r\n                <img id=\"buyableicon\" src={buyable.icon}></img>\r\n                <span id=\"buyabletitle\">{buyable.name}</span>\r\n                <span id=\"buyableprice\"> {addCommas(price)}฿</span>\r\n                <span id=\"buyableamount\"> {amount}</span>\r\n                \r\n            </div>\r\n            <div id=\"BuyRowDesc\"> \r\n                <p id='buyabledesc'>\r\n                    {buyable.description}\r\n                </p>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n    \r\n} \r\n\r\nexport default BuyRow","C:\\Users\\david\\Documents\\Programming\\bobuxgenerator\\src\\VisualRow.js",["65"],[],"import { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nfunction VisualRow(props) {\r\n    let imgs = []\r\n  \r\n    for (let i = 0; i < props.amount; i++) { \r\n        imgs.push(<img src={props.icon} key={\"icon-\" + nanoid()} alt={props.name}></img>)\r\n    }\r\n    return (\r\n        <div className=\"VisualRow\">\r\n            {imgs}\r\n        </div>\r\n    )\r\n}\r\nexport default VisualRow;",{"ruleId":"66","severity":1,"message":"67","line":15,"column":14,"nodeType":"68","messageId":"69","endLine":15,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":6,"column":9,"nodeType":"72","messageId":"73","endLine":6,"endColumn":18},{"ruleId":"70","severity":1,"message":"74","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":29,"column":6,"nodeType":"77","endLine":29,"endColumn":24},{"ruleId":"75","severity":1,"message":"78","line":29,"column":6,"nodeType":"77","endLine":29,"endColumn":24,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"67","line":53,"column":22,"nodeType":"68","messageId":"69","endLine":53,"endColumn":24},{"ruleId":"70","severity":1,"message":"80","line":15,"column":9,"nodeType":"72","messageId":"73","endLine":15,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":21,"column":18,"nodeType":"68","messageId":"69","endLine":21,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":31,"column":32,"nodeType":"68","messageId":"69","endLine":31,"endColumn":34},{"ruleId":"70","severity":1,"message":"81","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":18},{"ruleId":"70","severity":1,"message":"81","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":18},{"ruleId":"66","severity":1,"message":"82","line":15,"column":14,"nodeType":"68","messageId":"69","endLine":15,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":23,"column":41,"nodeType":"68","messageId":"69","endLine":23,"endColumn":43},{"ruleId":"66","severity":1,"message":"67","line":40,"column":38,"nodeType":"68","messageId":"69","endLine":40,"endColumn":40},{"ruleId":"66","severity":1,"message":"82","line":44,"column":25,"nodeType":"68","messageId":"69","endLine":44,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":53,"column":15,"nodeType":"68","messageId":"69","endLine":53,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":62,"column":17,"nodeType":"85","endLine":62,"endColumn":58},{"ruleId":"70","severity":1,"message":"81","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":18},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Buyables' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","CallExpression","React Hook React.useEffect has a missing dependency: 'unloadParams'. Either include it or remove the dependency array.",["86"],"'setGame' is assigned a value but never used.","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"87","fix":"88"},"Update the dependencies array to be: [unloadParams]",{"range":"89","text":"90"},[645,663],"[unloadParams]"]